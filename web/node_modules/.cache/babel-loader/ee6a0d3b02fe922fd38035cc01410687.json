{"ast":null,"code":"import produce from 'immer';\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.product.id);\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount += 1;\n        } else {\n          draft.push({ ...action.product,\n            amount: 1\n          });\n        }\n      });\n\n    case 'REMOVE_TO_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/danielsimoes/workspace/coffe/src/store/modules/cart/reducer.js"],"names":["produce","cart","state","action","type","draft","productIndex","findIndex","p","id","product","amount","push","splice"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAE/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACO,OAAP,CAAeD,EAA7C,CAArB;;AACA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBD,UAAAA,KAAK,CAACC,YAAD,CAAL,CAAoBK,MAApB,IAA8B,CAA9B;AACD,SAFD,MAEO;AACLN,UAAAA,KAAK,CAACO,IAAN,CAAW,EACT,GAAGT,MAAM,CAACO,OADD;AAETC,YAAAA,MAAM,EAAE;AAFC,WAAX;AAID;AACF,OAVa,CAAd;;AAYA,SAAK,gBAAL;AACE,aAAOX,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC7B,cAAMC,YAAY,GAAGD,KAAK,CAACE,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASN,MAAM,CAACM,EAArC,CAArB;;AACA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACrBD,UAAAA,KAAK,CAACQ,MAAN,CAAaP,YAAb,EAA2B,CAA3B;AACD;AACF,OALa,CAAd;;AAOF;AACE,aAAOJ,KAAP;AAvBN;AAyBG","sourcesContent":["import produce from 'immer';\n\nexport default function cart(state = [], action) {\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.product.id);\n        if (productIndex >= 0) {\n          draft[productIndex].amount += 1;\n        } else {\n          draft.push({\n            ...action.product,\n            amount: 1,\n          });\n        }\n      });\n\n      case 'REMOVE_TO_CART':\n        return produce(state, draft => {\n          const productIndex = draft.findIndex(p => p.id === action.id);\n          if (productIndex >= 0) {\n            draft.splice(productIndex, 1);\n          }\n        });\n\n      default:\n        return state;\n      }\n    }\n"]},"metadata":{},"sourceType":"module"}